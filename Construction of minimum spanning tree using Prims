#include<stdio.h>
int parent[200]={0};
int find(int i){
    if(parent[i])
        i=parent[i];
    return i;
}
int uni(int i,int j){
    if(i!=j){
        parent[j]=i;
        return 1;
    }
    return 0;
}
main(){
    int n,i,j,min=0,totalmincost=0,a,b,u,v,ne=1;
    printf("no of vertices in graph : ");
    scanf("%d",&n);
    int cost[n][n];
    printf("graph in matrix format:\n");
    for(i=1;i<=n;i++){
        for(j=1;j<=n;j++){
            scanf("%d",&cost[i][j]);
            if(cost[i][j]==0)
                cost[i][j]=9999;
        }
    }
    while(ne<n){
        min=9999;
        for(i=1;i<=n;i++){
            for(j=1;j<=n;j++){
                if(cost[i][j]<min){
                    min=cost[i][j];
                    a=i;
                    b=j;
                }
            }
        }
        u=find(a);
        v=find(b);
        if(uni(u,v)){
            printf("Edges(%d,%d) cost:%d\n",a,b,min);
            totalmincost+=min;
        }
        cost[a][b]=cost[b][a]=9999;
        ne++;
    }
    printf("minimum cost %d",totalmincost);
}
